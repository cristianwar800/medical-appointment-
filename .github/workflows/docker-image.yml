name: Docker Image CI

on:
  push:
    branches: [ "main", "pipeline" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Construir y publicar la imagen principal
      - name: Build and push main app
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/medical-app:latest

      # Construir y publicar el servicio de citas
      - name: Build and push appointments
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/medical-appointments:latest

      # Construir y publicar el servicio de chatbot
      - name: Build and push chatbot
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/medical-chatbot:latest

      # Limpiar contenedores existentes
      - name: Clean existing containers
        run: |
          docker ps -aq | xargs -r docker rm -f
          docker system prune -af

      # Probar los contenedores
      - name: Test containers
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/medical-app:latest
          docker run -d --name app -p 8082:80 ghcr.io/${{ github.repository_owner }}/medical-app:latest
          
          docker pull ghcr.io/${{ github.repository_owner }}/medical-appointments:latest
          docker run -d --name appointments -p 8084:80 ghcr.io/${{ github.repository_owner }}/medical-appointments:latest
          
          docker pull ghcr.io/${{ github.repository_owner }}/medical-chatbot:latest
          docker run -d --name chatbot -p 8086:80 ghcr.io/${{ github.repository_owner }}/medical-chatbot:latest
          
          sleep 30
          
          curl -f http://localhost:8082 || exit 1
          curl -f http://localhost:8084 || exit 1
          curl -f http://localhost:8086 || exit 1
