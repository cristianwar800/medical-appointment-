apiVersion: v1
kind: ConfigMap
metadata:
  name: medical-app-config
data:
  DB_CONNECTION: "mysql"
  DB_PORT: "3306"
  DB_DATABASE: "medical-appointment"
  DB_HOST: "mariadb-service"
  DB_USERNAME: "root"
  DB_PASSWORD: ""
---
# Deployment para la aplicación principal
apiVersion: apps/v1
kind: Deployment
metadata:
  name: medical-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: medical-app
  template:
    metadata:
      labels:
        app: medical-app
    spec:
      containers:
      - name: app
        image: medical-appointment-system-app
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        env:
        - name: SERVICE_NAME
          value: "main"
        envFrom:
        - configMapRef:
            name: medical-app-config
        volumeMounts:
        - name: app-storage
          mountPath: /var/www/html/storage
        - name: app-cache
          mountPath: /var/www/html/bootstrap/cache
      volumes:
      - name: app-storage
        emptyDir: {}
      - name: app-cache
        emptyDir: {}
---
# Service para la aplicación principal
apiVersion: v1
kind: Service
metadata:
  name: medical-app-service
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30082
  selector:
    app: medical-app
---
# Deployment para el servicio de citas
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appointments-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: appointments-app
  template:
    metadata:
      labels:
        app: appointments-app
    spec:
      containers:
      - name: appointments
        image: medical-appointment-system-appointments-app
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        env:
        - name: SERVICE_NAME
          value: "appointments"
        envFrom:
        - configMapRef:
            name: medical-app-config
        volumeMounts:
        - name: appointments-storage
          mountPath: /var/www/html/app/Services/appointmentService/storage
        - name: appointments-cache
          mountPath: /var/www/html/app/Services/appointmentService/bootstrap/cache
      volumes:
      - name: appointments-storage
        emptyDir: {}
      - name: appointments-cache
        emptyDir: {}
---
# Service para el servicio de citas
apiVersion: v1
kind: Service
metadata:
  name: appointments-service
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30084
  selector:
    app: appointments-app
---
# Deployment para el servicio de chatbot
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatbot-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chatbot
  template:
    metadata:
      labels:
        app: chatbot
    spec:
      containers:
      - name: chatbot
        image: medical-appointment-system-chatbot-service
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        env:
        - name: SERVICE_NAME
          value: "chatbot"
        envFrom:
        - configMapRef:
            name: medical-app-config
        volumeMounts:
        - name: chatbot-storage
          mountPath: /var/www/html/app/Services/chatbot-service/storage
        - name: chatbot-cache
          mountPath: /var/www/html/app/Services/chatbot-service/bootstrap/cache
      volumes:
      - name: chatbot-storage
        emptyDir: {}
      - name: chatbot-cache
        emptyDir: {}
---
# Service para el chatbot
apiVersion: v1
kind: Service
metadata:
  name: chatbot-service
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30086
  selector:
    app: chatbot
---
# PersistentVolumeClaim para MariaDB
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mariadb-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# Deployment para MariaDB
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mariadb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mariadb
  template:
    metadata:
      labels:
        app: mariadb
    spec:
      containers:
      - name: mariadb
        image: mariadb
        ports:
        - containerPort: 3306
        env:
        - name: MARIADB_ALLOW_EMPTY_ROOT_PASSWORD
          value: "yes"
        - name: MYSQL_DATABASE
          value: "medical-appointment"
        volumeMounts:
        - name: mariadb-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mariadb-storage
        persistentVolumeClaim:
          claimName: mariadb-pvc
---
# Service para MariaDB
apiVersion: v1
kind: Service
metadata:
  name: mariadb-service
spec:
  type: ClusterIP
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: mariadb